buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
compileTestJava.sourceCompatibility = 1.8
compileTestJava.targetCompatibility = 1.8

def defaultEncoding = 'UTF-8'
tasks.withType(AbstractCompile) each { it.options.encoding = defaultEncoding }

jar {
    baseName = 'auth-access'
    version =  '0.0.1-SNAPSHOT'
}

repositories {
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

configurations {
	testMock
}

dependencies {
	def jmockitDependency = "org.jmockit:jmockit:1.17";

    testMock jmockitDependency    //実行時にモックを有効にするために先に読み込む必要があるため別で管理
	testCompile jmockitDependency //eclipse用に設定
	testCompile "junit:junit:4.11"

    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

sourceSets.test.compileClasspath = configurations.testMock + sourceSets.test.compileClasspath
sourceSets.test.runtimeClasspath = configurations.testMock + sourceSets.test.runtimeClasspath

task wrapper(type: Wrapper) {
	gradleVersion = '1.12'
}
